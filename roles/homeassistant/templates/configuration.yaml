homeassistant:
{% for key, value in homeassistant_general_config.iteritems() %}
  {{key}}: {{value}}
{% endfor %}

# Discover some devices automatically
# discovery:

# Set API Password
http:
  api_password: {{homeassistant_http.api_password}}
  trusted_networks:
{% for network in homeassistant_http.trusted_networks %}
     - {{network}}
{% endfor %}

logger:
  default: info
  logs:
    homeassistant.components.device_tracker.nmap_tracker: warn

# View all events in a logbook
logbook:

# Enables the frontend
frontend:

# Enables support for tracking state changes over time.
history:

notify:
    # Had some issues with getting pushbullet notifications to work, signing out and in helped:
    # https://www.reddit.com/r/PushBullet/comments/53jvht/no_notifications_on_ios_10/
  - name: pushbullet
    platform: pushbullet
    api_key: {{pushbullet_api_key}}

  # Hass only works with legacy slack tokens
  # https://api.slack.com/custom-integrations/legacy-tokens
  # Slack's advantage over pushbullet is the ability to format messages and more customizable notification preferences
  # Note that username needs to be set to a different user than the one logged in to a device (e.g. phone)
  # for notifications to show up (messages from one-self do not generate notifications)
  # If username is not specified below, then messages will come from one-self (and hence no notifications)
  - name: slack
    platform: slack
    api_key: "{{slack_api_key}}"
    default_channel: "{{slack_default_channel}}"
    username: "{{slack_username}}"

# Allows you to issue voice commands from the frontend
conversation:

device_tracker:
  - platform: nmap_tracker
    hosts: {{nmap_tracker_hosts}}
    track_new_devices: no
    consider_home: 1200
  - platform: owntracks_http
    interval_seconds: 3
    consider_home: 10
  # - platform: ping
  #   track_new_devices: no
  #   hosts:
  #     {% for key, value in device_tracker_ping.iteritems() %}
  #     {{key}}: {{value}}
  #     {% endfor %}

# Track the sun
sun:

# Enable iOS support
ios:


weblink:
  entities:
    - name: Sonos HTTP API
      url: http://{{ansible_default_ipv4.address}}:{{sonos_http_api_port}}/
    - name: HADashboard
      url: {{appdaemon_dash_url}}
    - name: Uchiwa Dashboard
      url: http://{{ansible_default_ipv4.address}}:{{uchiwa_port}}

scene: !include scenes.yaml

media_player:
  - platform: sonos
  - platform: cast # Chromecast
  - platform: samsungtv
    host: {{samsungtv_host}}
  # Apparently Hass' spotify component doesn't recognize sonos devices :(
  # https://community.home-assistant.io/t/spotify-does-not-find-sonos-players-in-source/16245
  - platform: spotify
    client_id: {{spotify_client_id}}
    client_secret: {{spotify_client_secret}}

# There's issues with AppleTV that cause the TV to turn on randomly. Disabling it for now.
# - https://community.home-assistant.io/t/apple-tv-apple-tv-failed-to-login/11694/53
# - https://github.com/home-assistant/home-assistant/issues/6777
# apple_tv:
#   - name: Apple TV
#     host: {{atv_host}}
#     login_id: {{atv_login_id}}
#     start_off: false
#    credentials: CREDENTIALS


light:
  platform: hue
  host: {{phue_ip}}

tradfri:
  host: {{tradfri_ip}}
  allow_tradfri_groups: false

panel_iframe:
  roofcam:
    title: 'roofcam'
    url: 'http://{{roofcam_host}}:{{roofcam_port}}'
    icon: 'mdi:camcorder'

sensor:
    - platform: systemmonitor
      resources:
         - type: memory_free
         - type: disk_use_percent
           arg: /
         - type: memory_use_percent
    - platform: fastdotcom
      minute:
         - 1
         - 21
         - 41
    - platform: buienradar
      monitored_conditions:
        - symbol
        - humidity
        - temperature
        - windspeed
        - pressure
    - platform: google_travel_time
      api_key: {{google_travel_time_api_key}}
      origin: {{google_travel_time_origin}}
      destination: {{google_travel_time_destination}}
      name: {{google_travel_time_name}}
    - platform: template
      sensors:
        desk_state:
          friendly_name: "Desk"
          {% raw %}
          value_template: >-
            {% if states('sensor.deskheight')|float  < 75 %}
              down
            {% else %}
              up
            {% endif %}
          {% endraw %}

binary_sensor:
  - platform: template
    sensors:
      joris_working:
        friendly_name: "Joris working"
        {% raw %}
        value_template: "{{ (states('device_tracker.mbpcisco') == 'home') and (now().isoweekday() < 6)}}"
        {% endraw %}

nest:
    client_id: {{nest_client_id}}
    client_secret: {{nest_client_secret}}


{#
  1. Use %raw to insert braces into the lines below without ansible replacing them.
  2. FYI that in shell_command can't combine variables with actual shells (so using >> and | won't work)
     This is to ensure we're not just executing arbitrary shell commands based on user input.
     See https://github.com/home-assistant/home-assistant/blob/3ee4d1060fdbe067c19f7d4ce4777a7eb9dbb412/
     homeassistant/components/shell_command.py#L59-L65
#}

shell_command:
    play_sonos_favorite: 'curl "{{sonos_http_api_url_base}}/{% raw %}{{room}}/favorite/{{favorite}}{% endraw %}"'
    play_sonos_preset: 'curl "{{sonos_http_api_url_base}}/preset/{% raw %}{{preset}}{% endraw %}"'
    enable_nest_camera: '{{homeassistant_venv}}/bin/nest --client-id {{nest_client_id}} --client-secret {{nest_client_secret}} --token-cache {{homeassistant_dir}}/nest.conf --serial {% raw %}{{camera_serial_id}}{% endraw %} camera-streaming --enable-camera-streaming'
    disable_nest_camera: '{{homeassistant_venv}}/bin/nest --client-id {{nest_client_id}} --client-secret {{nest_client_secret}} --token-cache {{homeassistant_dir}}/nest.conf --serial {% raw %}{{camera_serial_id}}{% endraw %} camera-streaming --disable-camera-streaming'

input_select:
  house_mode:
    name: House mode
    options:
     - Home
     - Away
     - Sleeping
    initial: Home
    icon: mdi:home
  living_preset:
    name: Living Scene
    options:
      - NoPreset
      - Romance
      - Christmas
      - Relaxing
      - Watching TV
      - Weekend Breakfast

# script: !include scripts.yaml

######################
##  CONFIG EDITOR   ##
#####################

# Enable config editor
config:

group: !include groups.yaml

#zwave:
#  device_config: !include zwave_device_config.yaml


###################
##  AUTOMATION   ##
##################

# Include the automation editor:
automation: !include automations.yaml

