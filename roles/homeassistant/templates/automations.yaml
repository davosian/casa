# For automations to work from both manual triggers a
# We need both scene (=manual scene setting) and homeassistant (=HADashboard API call) triggers for this
- id: weekend_breakfast_music
  alias: 'Play Weekend Breakfast Music'
  trigger:
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.weekend_breakfast
        domain: homeassistant
        service: turn_on
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.weekend_breakfast
        domain: scene
        service: turn_on
  action:
    service: shell_command.play_sonos_preset
    data:
      preset: "weekend_breakfast"

- id: bathroom_morning_music
  alias: 'Play Morning Bathroom Music'
  trigger:
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.bathroom_morning_ritual
        domain: homeassistant
        service: turn_on
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.bathroom_morning_ritual
        domain: scene
        service: turn_on
  action:
    service: shell_command.play_sonos_preset
    data:
      preset: "morning_bathroom_ritual"

- id: romance_music
  alias: 'Play Romantic Music'
  trigger:
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.romance
        domain: homeassistant
        service: turn_on
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.romance
        domain: scene
        service: turn_on
  action:
    service: shell_command.play_sonos_preset
    data:
      preset: "romance"

- id: christmas_music
  alias: 'Play Christmas Music'
  trigger:
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.christmas
        domain: homeassistant
        service: turn_on
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.christmas
        domain: scene
        service: turn_on
  action:
    service: shell_command.play_sonos_preset
    data:
      preset: "christmas"

- id: relax_music_downstairs
  alias: 'Play Relaxing Music Downstairs'
  trigger:
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.relax
        domain: homeassistant
        service: turn_on
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.relax
        domain: scene
        service: turn_on
  action:
    service: shell_command.play_sonos_preset
    data:
      preset: "relax_downstairs"

- id: relax_music_bathroom
  alias: 'Play Relaxing Music in the Bathroom'
  trigger:
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.relaxing_shower
        domain: homeassistant
        service: turn_on
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.relaxing_shower
        domain: scene
        service: turn_on
  action:
    service: shell_command.play_sonos_preset
    data:
      preset: "relax_bathroom"

- id: enable_all_cameras
  alias: 'Enable all cameras'
  trigger:
{% for scene_name in ['slaapwel', 'leave'] %}
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.{{scene_name}}
        domain: homeassistant
        service: turn_on
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.{{scene_name}}
        domain: scene
        service: turn_on
{% endfor %}
  action:
    - service: shell_command.enable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.diepvries}}"
    - service: shell_command.enable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.hallway}}"
    - service: shell_command.enable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.front_garden}}"
    - service: shell_command.enable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.back_garden}}"
    - service: notify.slack
      data:
        message: |
              {%- raw %}
              {% if is_state('camera.diepvries', 'recording') and is_state('camera.front_garden', 'recording') and
                 is_state('camera.back_garden', 'recording') and is_state('camera.hallway', 'recording')
               %}
              :white_check_mark: All cameras recording 
              {% else %}
              :red_circle: Not all cameras are recording
              {% endif %}
               *Cameras*
               Diepvries = {{ states('camera.diepvries') }}
               Hallway = {{ states('camera.hallway') }}
               Front Garden = {{ states('camera.front_garden') }}
               Back Garden = {{ states('camera.back_garden') }}
               {% endraw %}

- id: disable_diepvries_cam
  alias: 'Disable diepvries cam, enabling all others'
  trigger:
{% for scene_name in ['coming_home', 'start_work_day', 'good_morning', 'tv_kijken', 'tv_lezen', 'koken', 'weekend_breakfast', 'relaxing', 'romance', 'relaxing_shower', 'bathroom_morning_ritual'] %}
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.{{scene_name}}
        domain: homeassistant
        service: turn_on
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.{{scene_name}}
        domain: scene
        service: turn_on
{% endfor %}

  action:
    - service: shell_command.disable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.diepvries}}"
    - service: shell_command.enable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.hallway}}"
    - service: shell_command.enable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.front_garden}}"
    - service: shell_command.enable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.back_garden}}"

