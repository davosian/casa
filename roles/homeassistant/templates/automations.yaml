################################################################################
# Living Preset                                                                #
################################################################################

- alias: Automatically set scene for Living Preset
  trigger:
    platform: state
    entity_id: input_select.living_preset
  action:
    - service: scene.turn_on
      data_template:
        entity_id: "{% raw %}scene.{{ states('input_select.living_preset') | lower | replace(' ', '_')}}{% endraw %}"

    # When disabling music, keep the current house mode (as this automation might be triggered by a change in
    # house mode). When enabling music, set house mode to Home.
    - service: input_select.select_option
      data_template:
        entity_id: input_select.house_mode
        option: |
          {% raw %}
          {% if is_state('input_select.living_preset', 'NoPreset') %}
            {{ states('input_select.house_mode') }}
          {% else %}
            Home
          {% endif %}
          {% endraw %}

################################################################################
# House Mode                                                                   #
################################################################################
- alias: Automatically set scene for House Mode
  trigger:
    platform: state
    entity_id: input_select.house_mode
  action:
    - service: scene.turn_on
      data_template:
        entity_id: "{% raw %}scene.{{ states('input_select.house_mode') | lower | replace(' ', '_')}}{% endraw %}"
    - service: input_select.select_option
      data:
        entity_id: input_select.living_preset
        option: NoPreset

- id: auto_home_on_start_work
  alias: 'Automatically set house_mode to home when turning on the office light in the morning'
  trigger:
    - platform: state
      entity_id: binary_sensor.joris_working
      to: 'on'
    - platform: state
      entity_id: light.kantoor
      to: 'on'
  condition:
    - condition: and
      conditions:
      - condition: state
        entity_id: input_select.house_mode
        state: 'Sleeping'
      - condition: time
        after: '05:00:00'
        before: '18:00:00'
  action:
    - service: notify.slack
      data:
        message: |
              Good Morning, enjoy your day!
    - service: input_select.select_option
      data_template:
        entity_id: input_select.house_mode
        option: "Home"


################################################################################
# Music input to sonos preset                                                  #
################################################################################

- alias: Play downstairs sonos preset for music input select
  trigger:
    platform: state
    entity_id: input_select.downstairs_music
  action:
    - service: shell_command.play_sonos_preset
      data_template:
        preset: "{% raw %}{{ states('input_select.downstairs_music') | lower | replace(' ', '_')}}{% endraw %}"

- alias: Play bathroom sonos preset for music input select
  trigger:
    platform: state
    entity_id: input_select.bathroom_music
  action:
    - service: shell_command.play_sonos_preset
      data_template:
        preset: "{% raw %}{{ states('input_select.bathroom_music') | lower | replace(' ', '_')}}{% endraw %}"

- alias: Bathroom - Set InputSelect to NoMusic when music is paused
  trigger:
    - platform: state
      entity_id: media_player.bathroom
      to: "paused"
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.bathroom_music
        option: "Bathroom NoMusic"

################################################################################
# TV                                                                           #
################################################################################
- alias: Automatically set LivingPreset to Watching TV when turning on the TV after sunset
  trigger:
    platform: state
    entity_id: device_tracker.samsungtv
    to: "home"
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.living_preset
        option: "Watching TV"

################################################################################
# Cooking                                                                      #
################################################################################

- alias: Automatically trigger Cooking scene when cooking enabled
  trigger:
    platform: state
    entity_id: input_boolean.cooking
  action:
    - service: scene.turn_on
      data_template:
        entity_id: "{% raw %}{{ 'scene.Cooking' if is_state('input_boolean.cooking', 'on') else 'scene.StopCooking'}}{% endraw %}"

- alias: Automatically disable cooking when turning off kitchen lights
  trigger:
    platform: state
    entity_id: light.kitchen
    to: "off"
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.cooking

- alias: Automatically stop cooking in the evening after 45min if the TV is on
  trigger:
    - platform: state
      entity_id: input_boolean.cooking
      to: "on"
  condition:
    - condition: time
      after: '17:30:00'
      before: '22:00:00'
  action:
    - delay: 0:45
    - service: notify.slack
      data:
        message: |
              Turning Off Cooking, since you're watching TV and starting cooking 45 mins ago
    - condition: state
      entity_id: "device_tracker.samsungtv"
      state: "home"
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.cooking

################################################################################
# Mornings                                                                     #
################################################################################

- alias: Trigger BathroomMorning scene on light turn on during week days
  trigger:
    platform: state
    entity_id: light.nachttafel_joris
    to: "on"
  condition:
    - condition: time
      after: '07:30:00'
      before: '11:30:00'
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    - service: scene.turn_on
      data:
        entity_id: "scene.BathroomMorningWeekDay"

- alias: Start week day when pausing bathroom player in the morning during weekdays
  trigger:
    - platform: state
      entity_id: media_player.bathroom
      to: "paused"
  condition:
    - condition: time
      after: '07:30:00'
      before: '11:30:00'
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    - service: scene.turn_on
      data:
        entity_id: "scene.StartWeekDay"

- alias: Start work day turning on computer in the morning
  trigger:
    - platform: state
      entity_id: binary_sensor.joris_working
      from: 'off'
      to: 'on'
  condition:
    - condition: time
      after: '07:30:00'
      before: '11:30:00'
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    - service: scene.turn_on
      data:
        entity_id: "scene.StartWorkingMorning"

################################################################################
# Send message on nest-presence set to home or away #
################################################################################

- id: auto_away_nest_presence
  alias: 'Send message when away from home'
  trigger:
    - platform: state
      entity_id: sensor.sensu_nest_presence
      from: 'home'
      to: 'away'
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.house_mode
        option: Away
    - service: notify.slack
      data:
        message: |
              You're gone from home! Set home automatically to away.

- id: auto_home_nest_presence
  alias: 'Send message when coming home'
  trigger:
    - platform: state
      entity_id: sensor.sensu_nest_presence
      from: 'away'
      to: 'home'
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.house_mode
        option: Home
    - service: notify.slack
      data:
        message: |
              Welcome home! Set home automatically to home.


################################################################################
# Turn on/off outdoor lights at sunset/sunrise #
################################################################################

- id: sunset_outdoor_lighting
  alias: 'Turn on outdoor lighting at sunset'
  trigger:
    - platform: sun
      event: sunset
  action:
    - service: scene.turn_on
      data:
        entity_id: scene.Sunset
    - service: notify.slack
      data:
        message: |
              Sun has set - triggered Sunset scene.

- id: sunset_outdoor_lighting
  alias: 'Turning off outdoor lighting at midnight'
  trigger:
    - platform: time
      at: '00:00:00'
  action:
    - service: scene.turn_on
      data:
        entity_id: scene.Midnight
    - service: notify.slack
      data:
        message: |
              Midnight. Turning off outdoor lights.

################################################################################
# Work                                                                         #
################################################################################
- alias: Set Working Scene according to binary sensor
  trigger:
    platform: state
    entity_id: binary_sensor.joris_working
  action:
      - service: scene.turn_on
        data_template:
          entity_id: "{% raw %}{{ 'scene.Working' if is_state('binary_sensor.joris_working', 'on') else 'scene.NotWorking'}}{% endraw %}"

################################################################################
# Camera                                                                       #
################################################################################

- alias: Camera Preset Home Automation
  trigger:
    platform: state
    entity_id: input_select.camera_preset
    to: "Home"
  action:
    - service: shell_command.disable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.diepvries}}"
    - service: shell_command.enable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.hallway}}"
    - service: shell_command.enable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.front_garden}}"
    - service: shell_command.enable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.back_garden}}"

- alias: Camera Preset All On Automation
  trigger:
    platform: state
    entity_id: input_select.camera_preset
    to: "All On"
  action:
    - service: shell_command.enable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.diepvries}}"
    - service: shell_command.enable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.hallway}}"
    - service: shell_command.enable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.front_garden}}"
    - service: shell_command.enable_nest_camera
      data:
        camera_serial_id: "{{nest_cam_serial_ids.back_garden}}"
    - service: notify.slack
      data:
        message: |
            The place is locked down.
