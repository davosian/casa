---
- name: "Installing homeassistant system dependencies"
  apt: name={{item}} state=present
  become: yes
  with_items:
    - python3-dev
    - nmap
    - libffi-dev # Required by pyatv
    - libssl-dev # Required by pyatv
    - build-essential # Required by pyatv
    - autoconf   # Required by TrÃ¤dfri

- name: Creating homeassistant group
  group: name="{{homeassistant_group}}" state=present system=yes
  become: yes

- name: Creating homeassistant user
  user: name="{{homeassistant_user}}" comment="Homeassistant User" group="{{homeassistant_group}}"
        home={{homeassistant_dir}} createhome=no system=yes # Not a login user
  become: yes

- name: Creating homeassistant directory
  file: path={{homeassistant_dir}} state=directory owner={{homeassistant_user}} group={{homeassistant_group}}
  become: yes

- name: Manually create the initial virtualenv
  command: virtualenv {{homeassistant_venv}} -p python3 creates="{{homeassistant_venv}}"
  become: yes

- name: "Installing homeassistant"
  pip: name=homeassistant virtualenv="{{homeassistant_venv}}" version={{homeassistant_version}}
  notify:
    - restart_homeassistant
  become: yes

# During upgrade, homeassistant runs its own pip install processes
# ubuntu   15885 15869 42 15:01 ?        00:00:02 /opt/homeassistant/.venv/bin/python3 -m pip install
# --quiet sqlalchemy==1.1.14 --upgrade
# --constraint /opt/homeassistant/.venv/lib/python3.5/site-packages/homeassistant/package_constraints.txt

- name: "Installing pyatv"
  pip: name=pyatv virtualenv="{{homeassistant_venv}}"
  notify:
  - restart_homeassistant
  become: yes

- import_tasks: patch_homeassistant.yml
  become: yes

- name: "Configuring homeassistant automations"
  template: src={{item}} dest={{homeassistant_dir}}/{{item}}
  with_items:
   - automations.yaml
  notify:
    - reload_homeassistant_automations
  tags:
    - hass-config
    - hass-automations
  become: yes

- name: "Configuring homeassistant known_devices (no restart needed)"
  template: src={{item}} dest={{homeassistant_dir}}/{{item}}
  with_items:
    - known_devices.yaml
  tags:
    - hass-config
  become: yes

- name: "Configuring homeassistant"
  template: src={{item}} dest={{homeassistant_dir}}/{{item}}
  with_items:
   - configuration.yaml
   - groups.yaml
   - scenes.yaml
   - scripts.yaml
#   - nest.conf # Nest token needs to be refreshed every so often, installing an invalid one messes up HA
   - phue.conf # No longer neccessary?
  notify:
    - reload_homeassistant_config
    - restart_homeassistant
  tags:
    - hass-config
  become: yes

# Needs become:yes because it might do upgrade of config related packages during hass upgrades
- name: "Validating homeassistant configuration"
  shell: "{{homeassistant_venv}}/bin/hass --script check_config -c {{homeassistant_dir}}"
  register: check_config_cmd
  changed_when: False
  failed_when: check_config_cmd.rc > 0
  tags:
    - hass-config
  become: yes

- name: "Ensure all files are owned by the homeassistant user"
  file: path={{homeassistant_dir}} state=directory owner={{homeassistant_user}} group={{homeassistant_group}} recurse=yes
  become: yes

- name: Modifying sudoers file so homeassistant user can restart certain services
  lineinfile:
    dest: /etc/sudoers
    state: present
    line: '{{homeassistant_user}} ALL=({{item.user}}) NOPASSWD: {{item.command}}'
    validate: visudo -cf %s
  become: yes
  with_items:
    - {"user": "root", "command": "/bin/systemctl restart {{sonos_http_api_service}}"}
    - {"user": "root", "command": "/bin/systemctl restart {{homeassistant_service}}.service"}

- name: Installing homeassistant systemd service
  template: src=homeassistant.service dest=/etc/systemd/system/{{homeassistant_service}}.service
  notify:
    - daemon_reload
    - restart_homeassistant
  become: yes

- name: "Add iptable rule for Homeassistant"
  iptables: chain=INPUT protocol=tcp destination_port={{homeassistant_port}} source={{casa_subnet}} ctstate=NEW,ESTABLISHED jump=ACCEPT
            comment=Homeassistant
  become: yes
  notify: save_iptables
  tags: [iptables, iptable]

- name: Installing some convenience aliases
  template: src=hass-aliases.sh dest=/etc/profile.d/hass-aliases.sh
  become: yes

# - name: Adding cronjob to restart homeassistant every night at 5.01AM
#   cron: name="Nightly homeassistant restart" hour="5" minute="01"
#         job="/usr/bin/sudo /bin/systemctl restart {{homeassistant_service}}.service" user={{homeassistant_user}}
#   become: yes

- name: Make sure homeassistant service is started
  service: name={{homeassistant_service}} state=started enabled=yes
  become: yes

- name: force all notified handlers to run at this point, not waiting until the end (because homeassistant restart is slow)
  meta: flush_handlers


# docker run -d --name="home-assistant" -v  /opt/homeassistant:/config -v /etc/localtime:/etc/localtime:ro --net=host homeassistant/home-assistant:0.79.3
# 