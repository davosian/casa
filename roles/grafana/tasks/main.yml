---
- name: Installing Grafana apt source public key
  become: yes
  apt_key:
    url: https://packagecloud.io/gpg.key
    state: present

# Using Debian package source on ubuntu as per installation instructions:
# "Use the above line even if you are on Ubuntu or another Debian version."
# http://docs.grafana.org/installation/debian/
- name: Adding Grafana package source
  lineinfile:
    state: present
    create: yes
    path: /etc/apt/sources.list.d/grafana.list
    line: "deb https://packagecloud.io/grafana/stable/debian jessie main"
  become: yes
  register: grafana_package_source

- name: "Updating apt-get cache"
  apt: update_cache=yes
  become: yes
  when: grafana_package_source.changed

- name: Installing grafana
  apt: name={{item}} state=present
  become: yes
  notify: restart_grafana
  with_items:
    - grafana

- name: Configuring grafana
  template: src=grafana.ini dest={{grafana_conf_dir}}/grafana.ini owner={{grafana_user}} group={{grafana_group}}
  notify:
    - restart_grafana
  become: yes

- name: Installing grafana plugins
  # Use plugins ls + grep to determine whether plugin is already installed (=makes this command idempotent)
  shell: "grafana-cli plugins ls | grep {{item}} || grafana-cli plugins install {{item}}"
  register: grafana_plugins
  changed_when: grafana_plugins.stdout | search("successfully")
  become: yes
  notify:
    - restart_grafana
  with_items:
    - grafana-piechart-panel
    - natel-discrete-panel

- name: Make sure grafana services are started and enabled
  service: name={{item}} state=started enabled=yes
  become: yes
  with_items:
    - "{{grafana_service}}"

- name: Installing some convenience aliases
  template: src=grafana-aliases.sh dest=/etc/profile.d/grafana-aliases.sh
  become: yes

- name: force all notified handlers to run at this point, so that new auth credentials take effect before installing data sources
  meta: flush_handlers

- name: Wait for grafana to come online
  wait_for:
    host: "{{grafana_bind_ip}}"
    port: "{{grafana_port}}"

- name: "Installing homeassistant datasource"
  include_tasks: install_influxdb_datasource.yml
  vars:
    datasource_name: "homeassistant"
    datasource_user: "{{influxdb_grafana_user}}"
    datasource_password: "{{influxdb_grafana_password}}"
    datasource_database: "{{influxdb_homeassistant_db}}"

- name: "Installing sensu datasource"
  include_tasks: install_influxdb_datasource.yml
  vars:
    datasource_name: "sensu"
    datasource_user: "{{influxdb_sensu_user}}"
    datasource_password: "{{influxdb_sensu_password}}"
    datasource_database: "{{influxdb_sensu_db}}"